name: Build and Deploy to Helios

on:
  workflow_dispatch:
    inputs:
      website_dir:
        description: "Папка со статикой (копируется в ~/public_html)"
        required: true
        default: "site/output"
      clean:
        description: "Очистить ~/public_html перед развёртыванием"
        required: true
        default: "true"
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Nikola and Node deps
        run: |
          python -m pip install --upgrade pip
          pip install "nikola[extras]"
          npm ci

      - name: Build CSS with PostCSS
        run: |
          npm run build:css

      - name: Copy custom theme assets
        run: |
          mkdir -p site/themes/custom/assets/css site/themes/custom/assets/js
          cp -f site/themes/custom/assets/js/main.js site/assets/js/main.js || true

      - name: Prepare report and images
        run: |
          set -e
          mkdir -p site/pages
          sed -E 's#\]\(images/#](../../images/#g; s#src=\"images/#src=\"../../images/#g' report.md > site/pages/report.md
          mkdir -p site/files/images
          if [ -d images ]; then
            cp -R images/* site/files/images/ || true
          fi

    
      - name: Build Nikola site
        working-directory: site
        run: |
          nikola clean -a || true
          nikola build

      - name: Minify HTML
        run: |
          npm run minify:html

      - name: Set homepage redirect to author home page
        working-directory: site
        run: |
          mkdir -p output
          cat > output/index.html << 'EOF'
          <!doctype html>
          <html lang="en">
          <head>
            <meta charset="utf-8">
            <meta http-equiv="refresh" content="0; url=pages/home/">
            <meta name="robots" content="noindex">
            <title>Redirecting…</title>
          </head>
          <body>
            <p>Redirecting to <a href="pages/home/">home</a>…</p>
            <script>location.replace('pages/home/');</script>
          </body>
          </html>
          EOF

      - name: Upload website artifact
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: site/output/

  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download website artifact
        uses: actions/download-artifact@v4
        with:
          name: website
          path: site/output

      - name: Validate HTML (vnu-jar)
        run: |
          docker run --rm -v "$PWD/site/output:/site" ghcr.io/validator/validator:latest --errors-only /site || (echo 'HTML validation failed' && exit 1)

      - name: Check home has link to report
        run: |
          python -m http.server 8000 -d site/output &
          sleep 1
          curl -sSf http://127.0.0.1:8000/pages/home/ | grep '/pages/report/'

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    env:
      HELIOS_HOST: helios.cs.ifmo.ru
      HELIOS_PORT: "2222"
      WEBSITE_DIR: ${{ github.event.inputs.website_dir || 'site/output' }}
    steps:
      - name: Download website artifact
        uses: actions/download-artifact@v4
        with:
          name: website
          path: ${{ env.WEBSITE_DIR }}

      - name: Deploy with composite action
        uses: EnderWarik/helios-deploy-action@v0.0.1
        with:
          helios_user: ${{ secrets.HELIOS_USER }}
          helios_password: ${{ secrets.HELIOS_PASSWORD }}
          website_dir: ${{ env.WEBSITE_DIR }}
          clean: ${{ github.event.inputs.clean || 'true' }}
          helios_host: ${{ env.HELIOS_HOST }}
          helios_port: ${{ env.HELIOS_PORT }}


